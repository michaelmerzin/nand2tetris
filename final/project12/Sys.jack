
/**
 * A library that supports various program execution services.
 */
class Sys {
    /** Performs all the initializations required by the OS. */
    function void init() {
        // Pseudocode:
        // 1. for each relevant OS class, do Class.init
        //    Some OS classes depend on others, so order is important here!
        // 2. do Main.main()
        // 3. do Sys.halt()
        do Memory.init();
        do Math.init();
        do Keyboard.init();
        do Screen.init();
        do Output.init();
        do Main.main();
        do Sys.halt();
        return;
    }

    /** Halts program execution. */
    function void halt() {
        while (true) {
        }
        return;
    }


    /** Waits approximately duration milliseconds and returns.  */
    function void wait(int duration) {
        var int iter, i, j, const;
        let const = 30000;
        let iter = 3;
        let i = 0;
        let j = 0;
        while (duration > 0) {
            while (j < iter) {
                while (i < const) {
                    let i = i + 1;
                }
                let i = 0;
                let j = j + 1;
            }

            let duration = duration - 1;
        }
        return;
    }

    /** Displays the given error code in the form "ERR<errorCode>",
     *  and halts the program's execution. */
    function void error(int errorCode) {
        do Output.printString("ERR");
        do Output.printInt(errorCode);
        do Sys.halt();
        return;
    }
}
